{
  "name": "taskflow",
  "version": "2.0.0",
  "private": true,
  "homepage": ".",
  "dependencies": {
    "axios": "^1.11.0",
    "firebase": "^10.1.0"
  },
  "scripts": {
  "start": "npm run dev:be",
  "start:dev": "cross-env NODE_ENV=development npm run dev:be",
  "start:frontend": "npm --prefix frontend run start",
  "dev:all": "concurrently -k -n FRONT,BACK \"npm run start:frontend\" \"npm run dev:be\"",
    "start:prod": "cross-env NODE_ENV=production npm run dev:be",
    "build": "echo \"No frontend build. AI/server only.\"",
    "build:dev": "npm run build",
    "build:prod": "npm run build",
    "build:clean": "echo \"Nothing to clean (no frontend build).\"",
    "build:super-fast": "npm run build",
    "build:optimized": "npm run build",
    "build:with-cache": "npm run build",
    "type-check": "tsc --noEmit --skipLibCheck",
    "type-check-parallel": "node scripts/parallel-type-check.js",
    "type-check-async": "tsc --noEmit --skipLibCheck &",
    "check-all": "node scripts/check-types.js",
    "pre-commit": "npm run check-all",
    "build-safe": "npm run type-check && npm run build",
    "lint": "echo \"Lint disabled (no frontend).\"",
    "build:production": "npm run type-check-parallel && npm run build",
    "build:parallel": "npm run build",
    "build:turbo": "npm run build",
    "dev": "npm run start:dev",
    "dev:fe": "echo \"No frontend.\"",
    "dev:be": "cd server && npm run start:dev",
  "dev:emu": "firebase emulators:start --only auth,firestore",
    "prod": "npm run start:prod",
    "test": "echo \"No frontend tests configured.\"",
    "test:unit": "jest tests/unit --passWithNoTests",
    "test:integration": "ts-node tests/integration/login.test.ts",
    "test:e2e": "ts-node tests/e2e/login.e2e.ts",
    "test:smoke": "ts-node -e \"import('./tests/e2e/login.e2e.ts').then(m => m.default.runSmokeTests())\"",
    "test:dev": "npm run test:unit && npm run test:integration",
    "test:ci": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:prod": "npm run test:smoke",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:smoke",
    "test:runner": "ts-node tests/runner.ts",
    "eject": "echo \"Not applicable.\"",
    "serve": "echo \"No frontend build to serve.\"",
    "lighthouse": "npx lighthouse https://your-domain.vercel.app --output html --output-path ./lighthouse-report.html",
    "analyze": "npx source-map-explorer 'build/static/js/*.js'",
    "type-check-watch": "npx tsc --noEmit --watch",
    "build-check": "npm run type-check && npm run build",
    "deploy-ready": "npm run type-check && npm run build && npm run test --watchAll=false",
  "prepare": "echo husky temporarily disabled (dev server recovery)",
    "health-check": "node scripts/health-check.js",
    "health-check:quick": "node scripts/quick-check.js",
    "health-check:ci": "node scripts/ci-health-check.js",
    "health-check:json": "node scripts/health-check.js --json",
    "health-check:html": "node scripts/health-check.js --html",
    "firebase-check": "node scripts/firebase-health.js",
    "proxy-check": "curl http://localhost:3000/api/health || echo 'Proxy not working'",
    "api-check": "curl http://localhost:3333/health || echo 'Backend not running'",
    "dev-check": "npm run api-check && npm run proxy-check",
    "security-audit": "node scripts/security-audit.js",
    "performance-check": "node scripts/performance-check.js",
    "full-audit": "npm run firebase-check && npm run security-audit && npm run performance-check && npm run health-check",
    "deploy-firebase-rules": "node scripts/deploy-firestore-rules.js",
    "test-sync": "node scripts/test-sync-integration.js",
  "release:mobile": "npm --prefix frontend run release:mobile",
  "verify:no-order": "node scripts/verify-no-order-field.js"
  ,"android:build:debug": "cd frontend/android && gradlew assembleDebug"
  ,"android:build:release": "cd frontend/android && gradlew assembleRelease"
  ,"android:build:bundle": "cd frontend/android && gradlew bundleRelease"
  ,"android:install:debug": "adb install -r frontend/android/app/build/outputs/apk/debug/app-debug.apk"
  ,"android:install:release": "adb install -r frontend/android/app/build/outputs/apk/release/app-release.apk"
  ,"android:deploy:debug": "npm run release:mobile && npm run android:build:debug && npm run android:install:debug"
  ,"android:smart-install": "node scripts/android-install-debug.js"
  ,"adb:fetch": "node scripts/fetch-platform-tools.js"
  },
  "workspaces": ["frontend"],
  "eslintConfig": {
    "rules": {
      "no-restricted-syntax": [
        2,
        {
          "selector": "Literal[value*='gt-subtitle']",
          "message": "השתמשו ב-gt-sub בלבד (gt-subtitle הוסר)."
        }
      ]
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run health-check:quick && npm run type-check"
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@playwright/test": "^1.54.2",
    "concurrently": "^9.2.0",
    "cross-env": "^10.0.0",
    "husky": "^9.1.7",
    "nodemon": "^3.1.10",
    "typescript": "^4.9.5"
  },
  "overrides": {}
}
